# Example route definition for an endpoint that requests
# an offline token. It is based on the authN-only example
# and can be combined with it.
apiVersion: apisix.apache.org/v2
kind: ApisixRoute
metadata:
  name: authn-only-route
  namespace: example-service-ns
spec:
  http:
  - name: offline-token-retrieval-route
    match:
      hosts:
        - authn-only-example.apx.develop.eoepca.org
      # Only configure offline token retrieval for a dedicated path (no wildcards)
      paths:
        - /get_offline_token
    backends:
      - serviceName: example-service
        servicePort: 80
    plugins:
      - name: openid-connect
        enable: true
        config:
          client_id: "example-client"
          client_secret: "example-client-secret"
          access_token_in_authorization_header: true
          discovery: "https://iam-auth.apx.develop.eoepca.org/realms/eoepca/.well-known/openid-configuration"
          # Request an offline token instead of a refresh token.
          scope: openid email profile offline_access
          # Pass the offline token to the backend via the X-Refresh-Token header.
          set_refresh_token_header: true
        # secretRef is an alternative way to specify sensitive information like the client secret.
        # It is recommended to create a (sealed) secret with the same name as the route and reference it here.
        # The secret should contain the client credentials (client_id and client_secret), which may
        # then be omitted above.
        #secretRef: authn-only-route
---
# Example secret for the route definition above.
# This secret may be referenced via secretRef instead of specifying
# the client credentials directly in the route definition.
# The secret should be created either manually or through a sealed secret.
apiVersion: v1
data:
  client_id: "ZXhhbXBsZS1jbGllbnQ="
  client_secret: "ZXhhbXBsZS1jbGllbnQtc2VjcmV0"
kind: Secret
metadata:
  # Secret name should match route name.
  name: authn-only-route
  namespace: example-service-ns
type: Opaque
